<!DOCTYPE html>
<html>
<head>
    <title>Whack-a-Mole!</title>
</head>

<body>
    <div class="mole-container" style="background-color:White; position:absolute; left:50px; top:50px; width:600px; height:500px;">
        <img src="images/mole.jpg" id="mole" style="position: absolute; top: 0px; left: 0px;" />
    </div>

        <div id="score-container" style='width:200px;'>
        </div>

        <div id="discussion" style="position:absolute; left:675px;">
            Click the mole twice to join the game in progress!<br /><br />
        </div>

    <!--Script references. -->
    <!--Reference the jQuery library. -->
    <script src="/Scripts/jquery-1.6.4.min.js" ></script>
    <!--Reference the SignalR library. -->
    <script src="/Scripts/jquery.signalR-1.1.3.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/hubs"></script>
    <!--Add script to update the page and send messages.--> 
    <script type="text/javascript">
        $(function () {

            // Declare a proxy to reference the hub. 
            var mole = $.connection.moleHub;

            // Create a function that the hub can call to tell you you killed a mole
            mole.client.Whack = function (message, time, x, y, size) {

                //check if the player has started yet
                if (joined == true) {
                    $('#discussion').append('<strong>' + message + '</strong><br />');

                    $('#mole').animate({ left: x + 'px', top: y + 'px' }, 1);
                    $('#mole').animate({ width: size + 'px', height: size + 'px' }, 1);

                    $('#mole').toggle();

                    setTimeout(function () {
                        $('#messages').html('');
                        $('#mole').toggle();
                    }, time); //maybe replace with a hub call instead of a js timeout
                }

            };

            //flag for whether this player has actually joined the game yet
            joined = false;

            //onscreen display of the scores. Won't really scale to many users but oh well.
            mole.client.UpdateScoreDisplay = function (scores) {
                $('#score-container').html('');

                var result = $.parseJSON(scores);
                $.each(result, function (k, v) {
                    //display the key and value pair
                    $('#score-container').append(k + ' has score ' + v + '<br />');
                });
            };

            // Get the user name and store it to prepend to messages. Also used as a naive score-keeping mechanism (although I suppose that makes it easy to rejoin any game in progress and keep your existing socre)
            me = prompt('Enter your name:', '');

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#mole').click(function () {
                    if (joined === true) {
                        // Call the Send method on the hub. 
                        mole.server.kill(me);
                    } else {
                        joined = true; //set the flag for game started
                    }
                });
            });

            //periodically clear the message display
            setInterval(function () {
                $('#discussion').html('');
            }, 120000);
        });
    </script>
</body>
</html>